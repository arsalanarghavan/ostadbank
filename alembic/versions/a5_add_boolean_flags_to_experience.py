"""Adds boolean flags and makes text fields nullable in experience

Revision ID: a5
Revises: a4
Create Date: 2025-09-26 19:00:00.000000

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a5'
down_revision = 'a4'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('experiences', sa.Column('has_notes', sa.Boolean(), nullable=True))
    op.add_column('experiences', sa.Column('has_project', sa.Boolean(), nullable=True))
    op.add_column('experiences', sa.Column('has_exam', sa.Boolean(), nullable=True))
    
    # Make text fields nullable as they are now conditional
    op.alter_column('experiences', 'teaching_style', existing_type=sa.TEXT(), nullable=True)
    op.alter_column('experiences', 'notes', existing_type=sa.TEXT(), nullable=True)
    op.alter_column('experiences', 'project', existing_type=sa.TEXT(), nullable=True)
    op.alter_column('experiences', 'attendance_details', existing_type=sa.TEXT(), nullable=True)
    op.alter_column('experiences', 'exam', existing_type=sa.TEXT(), nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('experiences', 'exam', existing_type=sa.TEXT(), nullable=False)
    op.alter_column('experiences', 'attendance_details', existing_type=sa.TEXT(), nullable=False)
    op.alter_column('experiences', 'project', existing_type=sa.TEXT(), nullable=False)
    op.alter_column('experiences', 'notes', existing_type=sa.TEXT(), nullable=False)
    op.alter_column('experiences', 'teaching_style', existing_type=sa.TEXT(), nullable=False)
    
    op.drop_column('experiences', 'has_exam')
    op.drop_column('experiences', 'has_project')
    op.drop_column('experiences', 'has_notes')
    # ### end Alembic commands ###